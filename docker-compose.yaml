version: '3.9'

volumes:
  rabbitmq-data:
  db-data:

services:
  db:
    container_name: db
    image: postgres:14.2
#    ports:
#      - 5432:5432
    expose:
      - 5432
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 6
    networks:
        - ub-store-net

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
#    expose:
#      - 5672
#      - 15672
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
        - ub-store-net

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.19
    attach: false
#    attach: true
    depends_on:
        - db
    restart: unless-stopped
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#        - ./pgadmin:/var/lib/pgadmin
    ports:
        - ${PGADMIN_PORT:-5050}:80
    networks:
        - ub-store-net
  backend:
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
#    ports:
#      - "8080:8080"
    expose:
      - 8080
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
#    volumes:
#      - ./media:/media
    build:
      context: UsedBookStore
    command: bash -c "
      python manage.py migrate
      && python manage.py create_groups
      && gunicorn UsedBookStore.wsgi -b 0.0.0.0:8080
      "
#      && celery -A UsedBookStore beat
#      && celery -A UsedBookStore worker
#      && python manage.py create_test_data
    networks:
        - ub-store-net

  frontend:
    container_name: frontend
    build:
      context: ./UsedBookStore-frontend
#    ports:
#      - 5173:80
    expose:
      - 5173
    networks:
      - ub-store-net

  nginx:
    build:
      context: ./nginx
    ports:
      - '8000:80'
    depends_on:
      - backend
      - frontend
    networks:
      - ub-store-net

#  celery:
#    build: ./project
#    command: celery -A UsedBookStore worker -l info
#    volumes:
#      - ./project/:/usr/src/app/
#    depends_on:
#      - rabbitmq
#      db:
#        condition: service_healthy
#    networks:
#      - ub-store-net
#
#  celery-beat:
#    build: ./project
#    command: celery -A UsedBookStore beat -l info
#    volumes:
#      - ./project/:/usr/src/app/
#    depends_on:
#      - rabbitmq
#      db:
#        condition: service_healthy
#    networks:
#      - ub-store-net


networks:
    ub-store-net:
        driver: bridge
